#include "kitchen_hood.h"

namespace esphome {
namespace kitchen_hood {

// Метод setup компонента KitchenHoodComponent
// Вызывается ESPHome при инициализации компонента
// Здесь создается экземпляр KitchenHood и настраиваются все UART последовательности
void KitchenHoodComponent::setup() {
  // Создаем экземпляр класса KitchenHood и регистрируем его в ESPHome
  auto *hood = new KitchenHood(this->uart_);
  App.register_component(hood);
  KitchenHood::instance = hood;

  // ========================================
  // ОБЩИЙ ЗАГОЛОВОК
  // ========================================
  // Заголовок отправляется перед каждой командой для синхронизации
  // 0x80 с паузой - стандартный заголовок протокола кухонной вытяжки
  hood->set_header_sequence({{0x80, true}});

  // ========================================
  // ПОСЛЕДОВАТЕЛЬНОСТИ ЗАПУСКА (BOOT_SEND)
  // ========================================
  // Эти последовательности отправляются при загрузке ESP32 для инициализации вытяжки
  
  // Последовательность запуска 1: базовая инициализация
  // 0x55, 0x55, 0x55, 0xFD - без пауз между байтами
  hood->set_start1_sequence({{0x55, false}, {0x55, false}, {0x55, false}, {0xFD, false}});
  
  // Последовательность запуска 2: повторная инициализация
  // 0x55, 0x55, 0x55, 0xFD - без пауз между байтами
  hood->set_start2_sequence({{0x55, false}, {0x55, false}, {0x55, false}, {0xFD, false}});
  
  // Последовательность запуска 3: настройка режимов
  // 0x57, 0x55, 0x77 (с паузой), 0x77 (с паузой), 0xF7 - с паузами для стабилизации
  hood->set_start3_sequence({{0x57, false}, {0x55, false}, {0x77, true}, {0x77, true}, {0xF7, false}});
  
  // Последовательность запуска 4: финальная настройка
  // 0x57, 0x55, 0x77 (с паузой), 0x77 (с паузой), 0xF7 - с паузами для стабилизации
  hood->set_start4_sequence({{0x57, false}, {0x55, false}, {0x77, true}, {0x77, true}, {0xF7, false}});

  // ========================================
  // ПОСЛЕДОВАТЕЛЬНОСТИ СОСТОЯНИЯ МОТОРА
  // ========================================
  // Эти последовательности определяют режимы работы мотора без включенной подсветки
  
  // Скорость 0: мотор выключен
  // 0x55, 0xD5, 0x77 (с паузой), 0x77 (с паузой), 0xF7 - команда выключения
  hood->set_motor_speed0_sequence({{0x55, false}, {0xD5, false}, {0x77, true}, {0x77, true}, {0xF7, false}});
  
  // Скорость 1: низкая скорость мотора
  // 0x55 (с паузой), 0xD5, 0x77 (с паузой), 0xDD, 0xF7 - команда низкой скорости
  hood->set_motor_speed1_sequence({{0x55, true}, {0xD5, false}, {0x77, true}, {0xDD, false}, {0xF7, false}});
  
  // Скорость 2: средняя скорость мотора
  // 0x55, 0x57 (с паузой), 0x77 (с паузой), 0xD7, 0xF7 - команда средней скорости
  hood->set_motor_speed2_sequence({{0x55, false}, {0x57, true}, {0x77, true}, {0xD7, false}, {0xF7, false}});
  
  // Скорость 3: максимальная скорость мотора
  // 0x55 (с паузой), 0x57 (с паузой), 0x77 (с паузой), 0x75 (с паузой), 0xFF - команда максимальной скорости
  hood->set_motor_speed3_sequence({{0x55, true}, {0x57, true}, {0x77, true}, {0x75, true}, {0xFF, false}});

  // ========================================
  // ПОСЛЕДОВАТЕЛЬНОСТИ СОСТОЯНИЯ МОТОРА С ПОДСВЕТКОЙ
  // ========================================
  // Эти последовательности определяют режимы работы мотора с включенной подсветкой
  
  // Скорость 0 + подсветка: мотор выключен, подсветка включена
  // 0x5D, 0xD5, 0xD7, 0x77 (с паузой), 0xD7 - выключен + подсветка
  hood->set_motor_speed0_light_sequence({{0x5D, false}, {0xD5, false}, {0xD7, false}, {0x77, true}, {0xD7, false}});
  
  // Скорость 1 + подсветка: низкая скорость + подсветка
  // 0x5D, 0x57 (с паузой), 0xD7, 0xD7, 0xD7 - низкая + подсветка
  hood->set_motor_speed1_light_sequence({{0x5D, false}, {0x57, true}, {0xD7, false}, {0xD7, false}, {0xD7, false}});
  
  // Скорость 2 + подсветка: средняя скорость + подсветка
  // 0x5D, 0x5D (с паузой), 0xD7, 0x77, 0xD7 - средняя + подсветка
  hood->set_motor_speed2_light_sequence({{0x5D, false}, {0x5D, true}, {0xD7, false}, {0x77, false}, {0xD7, false}});
  
  // Скорость 3 + подсветка: максимальная скорость + подсветка
  // 0x5D, 0x77, 0x77, 0x77, 0x5D - максимальная + подсветка
  hood->set_motor_speed3_light_sequence({{0x5D, false}, {0x77, false}, {0x77, false}, {0x77, false}, {0x5D, false}});

  // ========================================
  // КОДЫ КНОПОК (ЗВУКОВОЕ СОПРОВОЖДЕНИЕ)
  // ========================================
  // Эти последовательности отправляются при изменении скорости для звуковой обратной связи
  // Используются только когда включен звук (sound_on_ = true)
  
  // Код кнопки для скорости 0: звуковой сигнал выключения
  // 0x57, 0x55, 0x77 (с паузой), 0x77 (с паузой), 0xF7 - звук выключения
  hood->set_button_motor_speed0_sequence({{0x57, false}, {0x55, false}, {0x77, true}, {0x77, true}, {0xF7, false}});
  
  // Код кнопки для скорости 1: звуковой сигнал низкой скорости
  // 0x57, 0x57, 0xDD, 0xD7, 0x77 - звук низкой скорости
  hood->set_button_motor_speed1_sequence({{0x57, false}, {0x57, false}, {0xDD, false}, {0xD7, false}, {0x77, false}});
  
  // Код кнопки для скорости 2: звуковой сигнал средней скорости
  // 0x57, 0x5D, 0xDD, 0x77, 0x77 - звук средней скорости
  hood->set_button_motor_speed2_sequence({{0x57, false}, {0x57, false}, {0x5D, false}, {0xDD, false}, {0x77, false}});
  
  // Код кнопки для скорости 3: звуковой сигнал максимальной скорости
  // 0x57, 0x77, 0x75 (с паузой), 0x57 (с паузой), 0xF7 - звук максимальной скорости
  hood->set_button_motor_speed3_sequence({{0x57, false}, {0x77, false}, {0x75, true}, {0x57, true}, {0xF7, false}});
}

}  // namespace kitchen_hood
}  // namespace esphome
